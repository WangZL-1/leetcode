class Solution {
public:
    bool isPalindrome(string s) {
        int l =0,r=s.length()-1;
        while(l<r){
            if((s[l]>='A'&&s[l]<='Z')||(s[l]>='a'&&s[l]<='z')){
                if((s[r]>='A'&&s[r]<='Z')||(s[r]>='a'&&s[r]<='z')){
                    char left = (char)tolower(s[l]), right=(char)tolower(s[r]);
                    cout<<left<<right;
                    if(left==right){
                        l++;
                        r--;
                        continue;
                    }
                    else{
                        return false;
                    }
                }
                else if(s[r]>='0'&&s[r]<='9'){
                    return false;
                }
                else
                    r--;
            }
            else if(s[l]>='0'&&s[l]<='9'){
                if((s[r]>='A'&&s[r]<='Z')||(s[r]>='a'&&s[r]<='z')){
                    return false;
                }
                else if(s[r]>='0'&&s[r]<='9'){
                    if (s[l]==s[r]){ 
                        l++;
                        r--;
                        continue;
                    }
                    else{
                        return false;
                    }
                }
                else
                    r--;
            } 
            else
                l++;  
        }
        return true;
    }
};

//
class Solution {
public:
    bool isPalindrome(string s) {
        string processed;
        for(int i=0; i<s.length(); i++){
            if(s[i] >= 'a' && s[i] <= 'z') processed += s[i];
            else if(s[i] >= 'A' && s[i] <= 'Z') processed += (char)tolower(s[i]);
            else if(s[i] >= '0' && s[i] <= '9') processed += s[i];
        }
        int len = processed.length();
        if(len == 1) return true;
        for(int i=0, j=len-1; i<len && j>-1 && i != j; i++, j--){
            if(processed[i] != processed[j]) return false;
        }
        return true;
    }
};
//
