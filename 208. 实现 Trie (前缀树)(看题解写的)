class Trie {
public:
    Trie *children[26];
    bool isend;
    Trie() { 
        isend=false;
        for(int i=0;i<26;i++){
            children[i] = nullptr;
        }
    }
    void insert(string word) {
        Trie* temp=this;
        for(int i=0;i<word.length();i++){
            int index=word[i]-'a';
            if(temp->children[index]==nullptr)
                temp->children[index]= new Trie();
            temp=temp->children[index];
        }
        temp->isend=true;   
    }
    bool search(string word) {
        Trie* temp=this;
        for(int i=0;i<word.length();i++){
            int index=word[i]-'a';
            if(temp->children[index]==nullptr)
                return false;
            temp=temp->children[index];
        }
        return temp->isend;

    }
    bool startsWith(string prefix) {
        Trie* temp=this;
        for(int i=0;i<prefix.length();i++){
            int index=prefix[i]-'a';
            if(temp->children[index]==nullptr)
                return false;
            temp=temp->children[index];
        }
        return true;
    }
};

/**
 * Your Trie object will be instantiated and called as such:
 * Trie* obj = new Trie();
 * obj->insert(word);
 * bool param_2 = obj->search(word);
 * bool param_3 = obj->startsWith(prefix);
 */
