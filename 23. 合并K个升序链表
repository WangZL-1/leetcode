class Solution {
public:
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        if (lists.size()==0)
            return nullptr;
        while(lists.size()>1){
           ListNode* temp= meragetwo(lists[0],lists[1]);
           lists.erase(lists.begin());
           lists.erase(lists.begin());
           lists.push_back(temp);
        }
        return lists[0];
    }
    ListNode* meragetwo(ListNode* a,ListNode*b){
        if(a==nullptr)
            return b;
        if(b==nullptr)
            return a;

        ListNode* result;
        if(a->val<b->val){
            result=a;
            a=a->next;
        }
        else{
            result=b;
            b=b->next;
        }
        
        ListNode* temp=result;   
        while(a!=nullptr||b!=nullptr){
            if(a==nullptr){
                temp->next=b;
                b=b->next;
                temp=temp->next;

            }
            else if(b==nullptr){
                temp->next=a;
                a=a->next;
                temp=temp->next;

            }
            else{
                if(a->val<=b->val){
                    temp->next=a;
                    a=a->next;
                    temp=temp->next;

                }
                else{
                    temp->next=b;
                    b=b->next;
                    temp=temp->next;

                }
            }
        }
        return result;
    }

};
