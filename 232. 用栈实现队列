class MyQueue {
    private Stack<Integer> st1;Stack<Integer> st2;
    public MyQueue() {
        st1 = new Stack<Integer>();
        Stack<Integer> st2 = new Stack<Integer>();
    }
    
    public void push(int x) {
        st1.push(x);
    }
    public int pop() {
        while(!st1.empty()){
            int temp=st1.pop();
            st2.push(temp);
        }
        int x=st2.pop();
        while(!st2.empty()){
            int temp=st2.pop();
            st1.push(temp);
        }
        return x;
    }
    public int peek() {
        while(!st1.empty()){
            int temp=st1.pop();
            st2.push(temp);
        }
        int x=st2.peek();
        while(!st2.empty()){
            int temp=st2.pop();
            st1.push(temp);
        }
        return x;

    }
    
    public boolean empty() {
        return st1.empty();

    }
}

/**
 * Your MyQueue object will be instantiated and called as such:
 * MyQueue obj = new MyQueue();
 * obj.push(x);
 * int param_2 = obj.pop();
 * int param_3 = obj.peek();
 * boolean param_4 = obj.empty();
 */
