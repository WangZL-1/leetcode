class Solution {
    public int[] intersect(int[] nums1, int[] nums2) {
        HashMap<Integer, Integer> map1 = new HashMap<Integer, Integer>();
        HashMap<Integer, Integer> map2 = new HashMap<Integer, Integer>();
        for(int i=0;i<nums1.length;i++){
            if(map1.containsKey(nums1[i]))
                map1.put(nums1[i],map1.get(nums1[i])+1);
            else
                map1.put(nums1[i],1);
        }
        for(int i=0;i<nums2.length;i++){
            if(map2.containsKey(nums2[i]))
                map2.put(nums2[i],map2.get(nums2[i])+1);
            else
                map2.put(nums2[i],1);
        }
        int size=0;
        
        for (int i : map1.keySet()){
            if(map2.containsKey(i)){
                int temp=map1.get(i);
                if(map2.get(i)<temp)
                    temp=map2.get(i);
                size+=temp;
                // for(int j=0;j<temp;j++)
                //     res.push_back(i);
            }
        }
        int [] res=new int[size];
        int index=0;
        for (int i : map1.keySet()){
            if(map2.containsKey(i)){
                int temp=map1.get(i);
                if(map2.get(i)<temp)
                    temp=map2.get(i);
                for(int j=0;j<temp;j++)
                    res[index++]=i;
            }
        }
        return res;
    }
}
