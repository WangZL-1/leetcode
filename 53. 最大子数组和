class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int maxsubsum=nums[nums.size()-1];
        vector<int> dp=nums;
        for(int i=nums.size()-2;i>=0;i--){
            if (dp[i]+dp[i+1]>dp[i]){
                dp[i]=dp[i]+dp[i+1];
            }
        }
        for(int i=0;i<dp.size();i++){
            if(dp[i]>maxsubsum)
                maxsubsum=dp[i];
        }
        return maxsubsum;


    }
};
//java
class Solution {
    public int maxSubArray(int[] nums) {
        int[] dp=nums;
        if(dp.length==1)
            return dp[0];
        for(int i=1;i<dp.length;i++){
            if(dp[i-1]<0)
                continue;
            else
                dp[i]=dp[i]+dp[i-1];
        }
        int res=Integer.MIN_VALUE;
        for(int i=0;i<dp.length;i++)
            if(dp[i]>res)
                res=dp[i];
        return res;

    }
}
