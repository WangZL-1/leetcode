class Solution {
public:
    int count=0;    
    vector<vector<int>> state;
    bool exist(vector<vector<char>>& board, string word) {
        // bool yes=1;
        // for(int l=0;l<word.length();l++)
        //     for (int i=0;i<board.size();i++)
        //         for (int j=0;j<board[0].size();j++){
        //             if(board[i][j]==word[l])
        //                 break;
        //         }
        
        state = vector<vector<int>>(board.size(), vector<int>(board[0].size()));
        char start=word[0];
        for (int i=0;i<board.size();i++)
            for (int j=0;j<board[0].size();j++){
                
                if(board[i][j]==start){
                    state[i][j]=1;
                    count++;
                    cout<<board[i][j];
                    if (checknext(board,state, word,i,j)){
                        return true;
                
                    }
                    else{
                        count--;
                         state[i][j]=0;
                        }
                }
            }
        return false;
                
    }

    bool checknext(vector<vector<char>>& board,vector<vector<int>>& state, string word,int x,int y){
        if(count==word.length()){
            cout<<"ok";
            return true;
        }
       
        //right
        if(y+1<board[0].size()){
                if(board[x][y+1]==word[count]&&state[x][y+1]==0){
                    cout<<board[x][y+1];
                    count++;
                    cout<<count;
                    state[x][y+1]=1;
                    if(checknext(board,state, word,x,y+1))
                        return true;
                    else{
                        count--;
                        state[x][y+1]=0;
                        }
                }
        }
        //bottom
        if(x+1<board.size()){
                if(board[x+1][y]==word[count]&&state[x+1][y]==0){
                    cout<<board[x+1][y];
                    count++;
                    cout<<count;
                    state[x+1][y]=1;
                    if(checknext(board,state, word,x+1,y))
                        return true;
                    else{
                        count--;
                        state[x+1][y]=0;
                        }
                }
        }
        //left
        if(y-1>=0){
                if(board[x][y-1]==word[count]&&state[x][y-1]==0){
                    cout<<board[x][y-1];
                    count++;
                    cout<<count;
                    state[x][y-1]=1;
                    if(checknext(board,state, word,x,y-1))
                    return true;
                    else{
                        count--;
                        state[x][y-1]=0;
                        }
                }
        }
        //top
        if(x-1>=0){
                if(board[x-1][y]==word[count]&&state[x-1][y]==0){
                    cout<<board[x-1][y];
                    count++;
                    state[x-1][y]=1;
                    if(checknext(board,state, word,x-1,y))
                     return true;
                    else{
                        count--;
                        state[x-1][y]=0;
                        }
                }
        }
    
        return false;

                    

 

    }
};
